default_platform(:ios)

platform :ios do
  lane :test do    
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "300"
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "4"

    # Find first available iPhone simulator dynamically
    simulator_id = sh("xcodebuild -project Palace.xcodeproj -scheme Palace -showdestinations 2>/dev/null | grep 'platform:iOS Simulator' | grep 'iPhone' | grep -v 'error:' | head -1 | sed 's/.*id:\\([^,]*\\).*/\\1/'").strip
    
    if simulator_id.empty?
      UI.user_error!("No available iPhone simulator found")
    end
    
    UI.message("Using iPhone simulator ID: #{simulator_id}")

    run_tests(
      project: "Palace.xcodeproj",
      scheme: "Palace",
      destination: "platform=iOS Simulator,id=#{simulator_id}",
      code_coverage: false,
      xcargs: "ONLY_ACTIVE_ARCH=YES CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO -parallel-testing-enabled YES -maximum-parallel-testing-workers 4"
    )
  end



  lane :nodrm do
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "300"
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "4"

    xcodebuild(
      project: "Palace.xcodeproj",
      scheme: "Palace-noDRM",
      destination: "generic/platform=iOS Simulator",
      configuration: "Debug",
      build: true,
      xcargs: "ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO"
    )
  end

  lane :beta do |options|
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "300"
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "4"

    UI.message("Building for iPhone simulator")

    xcodebuild(
      project: "Palace.xcodeproj",
      scheme: "Palace",
      destination: "platform=iOS,name=Any iOS Device",
      include_symbols: true,
      include_bitcode: false,
      silent: true,
      output_name: options[:output_name],
      output_directory: options[:export_path],
      export_method: "ad-hoc",
      export_options: {
        provisioningProfiles: { 
          "org.thepalaceproject.palace" => "Ad Hoc"
        }
      }
    )
  end

  lane :appstore do |options|
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "300"
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "4"

    sh("rm -rf ~/Library/Developer/Xcode/DerivedData/*")

    gym(
      project: "Palace.xcodeproj",
      scheme: "Palace",
      include_symbols: true,
      include_bitcode: false,
      export_method: "app-store"
    )

    pilot(
      api_key_path: "fastlane/fastlane.json",
      skip_submission: true,
      changelog: options[:changelog]
    )
  end
end