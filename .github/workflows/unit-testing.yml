name: Unit Tests
on: [ pull_request, workflow_dispatch ]
jobs:
  build-and-test:
    runs-on: macOS-latest
    steps:
      - name: Use the latest Xcode
        run: sudo xcode-select -switch /Applications/Xcode.app
      - name: Checkout main repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
      - name: Checkout Certificates
        uses: actions/checkout@v3
        with:
          repository: ThePalaceProject/mobile-certificates
          token: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
          path: ./mobile-certificates
      - name: Checkout Adobe RMSDK
        uses: actions/checkout@v3
        with:
          repository: ThePalaceProject/ios-drm-adeptconnector
          token: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
          path: ./ios-drm-adeptconnector
      - name: Create Adobe RMSDK Git LFS file list
        run: git lfs ls-files -l |cut -d' ' -f1 |sort >.git/lfs-hashes.txt
        working-directory: ./ios-drm-adeptconnector
      - name: Restore Adobe RMSDK Git LFS object cache
        uses: actions/cache@v4
        with:
          path: ./ios-drm-adeptconnector/.git/lfs
          key: ${{ runner.os }}-lfsdata-v1-${{ hashFiles('./ios-drm-adeptconnector/.git/lfs-hashes.txt') }}
          restore-keys: |
            ${{ runner.os }}-rmsdk-lfsdata-v1-
            ${{ runner.os }}-rmsdk-lfsdata
      - name: Fetch any needed Adobe RMSDK Git LFS objects and prune extraneous ones
        run: git lfs fetch --prune
        working-directory: ./ios-drm-adeptconnector
      - name: Check out Adobe RMSDK Git LFS content
        run: git lfs checkout
        working-directory: ./ios-drm-adeptconnector
      - name: Setup repo with DRM
        run: ./scripts/setup-repo-drm.sh
        env:
          BUILD_CONTEXT: ci
      - name: Build non-Carthage 3rd party dependencies
        run: ./scripts/build-3rd-party-dependencies.sh
        env:
          BUILD_CONTEXT: ci
      - name: Build Palace without DRM support
        run: ./scripts/xcode-build-nodrm.sh
        env:
          BUILD_CONTEXT: ci
      - name: Run Palace unit tests
        run: ./scripts/xcode-test.sh
        env:
          BUILD_CONTEXT: ci
