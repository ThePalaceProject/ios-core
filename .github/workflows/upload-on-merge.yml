name: Palace Build
on:
  pull_request:
    branches:
      - develop
    types: [closed]
jobs:
  check-version:
    runs-on: macOS-13
    steps:
      - name: Force Xcode 15
        run: sudo xcode-select -switch /Applications/Xcode_15.0.1.app
      - name: Checkout main repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
      - id: checkVersion
        name: Check Build Version
        run: ./scripts/ios-check-version.sh
        env:
          BUILD_CONTEXT: ci
    outputs:
      should_upload: ${{ steps.checkVersion.outputs.version_changed }}
  upload-build:
    runs-on: macOS-13
    needs: check-version
    if: github.event.pull_request.merged == true && needs.check-version.outputs.should_upload == '1'
    steps:
      - name: Force Xcode 15
        run: sudo xcode-select -switch /Applications/Xcode_15.0.1.app
      - name: Checkout main repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
      - name: Checkout Binaries
        uses: actions/checkout@v3
        with:
          repository: ThePalaceProject/ios-binaries
          token: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
          path: ./ios-binaries
      - name: Checkout Certificates
        uses: actions/checkout@v3
        with:
          repository: ThePalaceProject/mobile-certificates
          token: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
          path: ./mobile-certificates
      - name: Checkout Adobe RMSDK
        uses: actions/checkout@v3
        with:
          repository: ThePalaceProject/mobile-drm-adeptconnector
          token: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
          path: ./mobile-drm-adeptconnector
      - name: Uncompress Adobe RMSDK
        run: ./scripts/setup-repo-drm.sh
        env:
          BUILD_CONTEXT: ci
      - name: Build non-Carthage 3rd party dependencies
        run: ./scripts/build-3rd-party-dependencies.sh
        env:
          BUILD_CONTEXT: ci
      - name: Install provisioning profile
        run: ./scripts/install-profile.sh
        env:
          BUILD_CONTEXT: ci
          CI_APPSTORE_MP_BASE64: ${{ secrets.CI_APPSTORE_MP_BASE64 }}
          CI_ADHOC_MP_BASE64: ${{ secrets.CI_ADHOC_MP_BASE64 }}
          CI_DISTRIBUTION_CERT_BASE64: ${{ secrets.CI_DISTRIBUTION_CERT_BASE64 }}
          CI_DISTRIBUTION_CERT_PW: ${{ secrets.CI_DISTRIBUTION_CERT_PW }}
          CI_KEYCHAIN_PW: ${{ secrets.CI_KEYCHAIN_PW }}
          CI_APPLE_FASTLANE_JSON: ${{ secrets.CI_APPLE_FASTLANE_JSON }}
      - name: Export to binaries
        run: ./scripts/xcode-export-adhoc.sh
        env:
          BUILD_CONTEXT: ci
      - name: Create release notes
        run: ./scripts/create-release-notes.sh
        env:
          BUILD_CONTEXT: ci
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_ACCESS_TOKEN }}
      - name: Verify path and version
        run: |
          echo "Release notes path: " $RELEASE_NOTES_PATH
          cat $RELEASE_NOTES_PATH
          echo "Changelog path:     " $CHANGELOG_PATH
          cat $CHANGELOG_PATH
          echo "Version:            " $VERSION_NUM
        env:
          RELEASE_NOTES_PATH: ${{ env.RELEASE_NOTES_PATH }}
          CHANGELOG_PATH: ${{ env.CHANGELOG_PATH }}
          VERSION_NUM: ${{ env.VERSION_NUM }}
      - name: Export for App Store
        run: ./scripts/xcode-export-appstore.sh
        env:
          BUILD_CONTEXT: ci
          CHANGELOG_PATH: ${{ env.CHANGELOG_PATH }}
